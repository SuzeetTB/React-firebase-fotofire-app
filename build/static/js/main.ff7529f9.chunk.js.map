{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/MainComponent.js","comps/404.js","App.js","index.js"],"names":["require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","className","map","motion","div","layout","whileHover","opacity","s","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","y","Title","ip","setIP","publicIp","v4","fallbackUrls","then","ips","console","log","useStorage","file","progress","setProgress","error","setError","setUrl","setIp","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","Fragment","type","onChange","event","selected","files","includes","MainComponent","colorTheme","setColorTheme","currentThemeColor","localStorage","getItem","handleClick","theme","setItem","E404","App","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff7529f9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nrequire('firebase/storage') ;//store image/files\r\nrequire('firebase/firestore');//database\r\n\r\n//Firebase Configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDhl_u_R7uLik9uzhK712fxtBIrlAhLj1M\",\r\n    authDomain: \"react-firebase-deeb3.firebaseapp.com\",\r\n    projectId: \"react-firebase-deeb3\",\r\n    storageBucket: \"react-firebase-deeb3.appspot.com\",\r\n    messagingSenderId: \"154759190553\",\r\n    appId: \"1:154759190553:web:2e234bec1c95c66b7d7288\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//handles to interact with storage and database\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectFirestore, projectStorage, timeStamp};","import { useEffect, useState } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs,setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //effect\r\n        \r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n            .onSnapshot(snap=>{\r\n                let documents = [];//array\r\n                snap.forEach(doc=>{\r\n                    ///...doc.data() gets all properties of data from the database\r\n                    documents.push({...doc.data(),id:doc.id});\r\n                    //console.log({...doc.data(),id:doc.id});\r\n                });\r\n                //console.log(documents)\r\n                setDocs(documents);\r\n        });\r\n        return () => {\r\n            //cleanup when no longer in use / this is a cleanup function that react will run when\r\n            // a component using the hook unmounts\r\n            unsub();\r\n        }\r\n    }, [collection])\r\n    return { docs };\r\n}\r\n \r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs } = useFirestore('images');\r\n    //console.log(docs);\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id}\r\n                    layout\r\n                    whileHover={{ opacity: 1 }} s\r\n                    onClick={() => setSelectedImg(doc.url)}\r\n                >\r\n                    <motion.img className =\"img\" src={doc.url} alt=\"uploaded pic\"\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        transition={{ delay: 0.5 }}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageGrid;","/* \r\n    This is a modal View componenet.\r\n    that will view image in a full screen mode.\r\n*/\r\n\r\n\r\nimport React from \"react\";\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n        >\r\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\r\n                initial={{ y: \"-100vh\" }}\r\n                animate={{ y: 0 }}\r\n            />\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useState } from 'react';\nimport publicIp from 'public-ip';\n\nconst Title = () => {\n  const [ip, setIP] = useState(null);\n\n  useEffect(() => {\n    publicIp.v4({fallbackUrls:[\"https://ifconfig.co.ip\"] })\n    .then(ips=>{\n      console.log(ips);\n      setIP(ips)});\n    /* return (ip) => {\n      setIP(null)\n    } */\n  }, [ip])\n  \n  return (\n    <div className=\"title\">\n      <h2>Pictures</h2>\n      {ip && <h4>Your IP is cracked! :{ip}</h4>}\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from \"react\";\r\nimport { projectStorage,projectFirestore, timeStamp } from '../firebase/config';\r\nimport publicIp from 'public-ip';\r\n\r\nconst useStorage = (file) =>{\r\n    const [progress,setProgress] =useState(0);//File upload progress\r\n    const [error,setError] =useState(null);//Errors list\r\n    const [url,setUrl] =useState(null);//Url setter\r\n    const [ip, setIp] = useState(null);//ip setter\r\n\r\n    useEffect(()=>{\r\n        //reference\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n        \r\n        \r\n        storageRef.put(file).on('state_changed',(snap)=>{ //snap = snaphot object of file being uploaded realtime i.e it happens multiple times during upload\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes)*100;\r\n            setProgress(percentage);\r\n        },(err)=>{\r\n            setError(err);\r\n        },async()=>{\r\n            const url = await storageRef.getDownloadURL();\r\n            const ip = await publicIp.v4({\r\n                fallbackUrls:[\"https://ifconfig.co.ip\"]\r\n            });\r\n            const createdAt = timeStamp();\r\n            collectionRef.add({/* url:url */url,ip,createdAt});\r\n            setUrl(url);\r\n            setIp(`${ip}`);\r\n        })\r\n    },[file]);\r\n    return { progress, url, error, ip};\r\n}\r\n\r\nexport default useStorage;","import React, {useEffect}from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url,progress} = useStorage(file);\r\n    useEffect(() => {\r\n        if(url){setFile(null)}\r\n        /* return () => {\r\n            cleanup\r\n        }; */\r\n    }, [url,setFile]);\r\n    return ( \r\n        <motion.div \r\n            className=\"progress-bar\" \r\n            initial = {{width:0}}\r\n            animate = {{width:progress+'%'}}\r\n        />\r\n        \r\n     );\r\n}\r\n \r\nexport default ProgressBar;","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n    //state hooks for file\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    //File Types\r\n    const types = ['image/png','image/jpeg']\r\n    //event handler\r\n    const uploadHandler = (event)=>{\r\n        //console.log('A file is chosen!');\r\n        let selected = event.target.files[0];\r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        }else{\r\n            setFile(null);\r\n            setError('Please select a valid Image file only. [png,jpeg]');\r\n        };\r\n    }\r\n    //DOM Output\r\n    return ( \r\n        <React.Fragment>\r\n            <form>\r\n                <label>\r\n                    <input type=\"file\" onChange = {uploadHandler}/>\r\n                    <span>+</span>\r\n                </label>\r\n                <div className=\"output\">\r\n                    {error && <div className= \"error\" >{error} </div>}\r\n                    {file && <div>{file.name} </div>}\r\n                    {file && <ProgressBar file = {file} setFile = {setFile}/>}\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default UploadForm;","import React, { useState, useEffect } from 'react';\r\nimport ImageGrid from './ImageGrid';\r\nimport Modal from './Modal';\r\nimport Title from './Title';\r\nimport UploadForm from './UploadForm';\r\n\r\nconst MainComponent = () => {\r\n    //selected Image state\r\n    const [selectedImg, setSelectedImg] = useState(null);\r\n    //theme state hook\r\n    const [colorTheme, setColorTheme] = useState('theme-white');\r\n    //Theme selection effect\r\n    useEffect(() => {\r\n        //effect\r\n        //check for selected theme //local storage value\r\n        const currentThemeColor = localStorage.getItem('theme-color');\r\n        //found selected color value in state\r\n        if (currentThemeColor) {\r\n            setColorTheme(currentThemeColor);\r\n        }\r\n        /* \r\n            return () => {\r\n              \r\n            } */\r\n    }, [])\r\n    //theme change event sets theme\r\n    const handleClick = (theme) => {\r\n        setColorTheme(theme);\r\n        localStorage.setItem('theme-color', theme);\r\n    };\r\n    return (\r\n        <div className={`App ${colorTheme}`}>\r\n            <div className=\"head\">\r\n                <div className=\"head-title\"><h2>fotofire</h2></div>\r\n                <div className=\"theme-option\">\r\n                    <div id=\"theme-white\"\r\n                        onClick={() => { handleClick('theme-white') }}\r\n                        className={`${colorTheme === 'theme-white' ? 'active' : ''}`}\r\n                    />\r\n                    <div id=\"theme-blue\"\r\n                        onClick={() => { handleClick('theme-blue') }}\r\n                        className={`${colorTheme === 'theme-blue' ? 'active' : ''}`}\r\n                    />\r\n                    <div id=\"theme-orange\"\r\n                        onClick={() => { handleClick('theme-orange') }}\r\n                        className={`${colorTheme === 'theme-orange' ? 'active' : ''}`}\r\n                    />\r\n                    <div id=\"theme-purple\"\r\n                        onClick={() => { handleClick('theme-purple') }}\r\n                        className={`${colorTheme === 'theme-purple' ? 'active' : ''}`}\r\n                    />\r\n                    <div id=\"theme-green\"\r\n                        onClick={() => { handleClick('theme-green') }}\r\n                        className={`${colorTheme === 'theme-green' ? 'active' : ''}`}\r\n                    />\r\n                    <div id=\"theme-black\"\r\n                        onClick={() => { handleClick('theme-black') }}\r\n                        className={`${colorTheme === 'theme-black' ? 'active' : ''}`}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"content-box\">\r\n                <Title />\r\n                <UploadForm />\r\n                <ImageGrid setSelectedImg={setSelectedImg} />\r\n                {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainComponent;","/* import { Link } from \"react-router-dom\" */\r\n\r\nconst E404 = () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h2>Sorry !</h2>\r\n            <p>The requested page may be in development</p>\r\n            {/* <br/>\r\n            <Link to=\"/\">Home</Link> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default E404;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport MainComponent from './comps/MainComponent';\nimport E404 from './comps/404'\nimport './themes/switcher.scss';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n          <Route path='/' exact component ={MainComponent}/>\n          <Route path='*' component={E404}/>\n      </Switch>\n    </Router> \n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}