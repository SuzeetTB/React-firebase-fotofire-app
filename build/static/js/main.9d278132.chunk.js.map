{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","className","map","motion","div","layout","whileHover","opacity","s","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","width","UploadForm","types","Fragment","type","onChange","event","selected","files","includes","App","colorTheme","setColorTheme","currentThemeColor","localStorage","getItem","handleClick","theme","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d278132.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nrequire('firebase/storage') ;//store image/files\r\nrequire('firebase/firestore');//database\r\n\r\n//Firebase Configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDhl_u_R7uLik9uzhK712fxtBIrlAhLj1M\",\r\n    authDomain: \"react-firebase-deeb3.firebaseapp.com\",\r\n    projectId: \"react-firebase-deeb3\",\r\n    storageBucket: \"react-firebase-deeb3.appspot.com\",\r\n    messagingSenderId: \"154759190553\",\r\n    appId: \"1:154759190553:web:2e234bec1c95c66b7d7288\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//handles to interact with storage and database\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectFirestore, projectStorage, timeStamp};","import { useEffect, useState } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs,setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //effect\r\n        \r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n            .onSnapshot(snap=>{\r\n                let documents = [];//array\r\n                snap.forEach(doc=>{\r\n                    ///...doc.data() gets all properties of data from the database\r\n                    documents.push({...doc.data(),id:doc.id});\r\n                    //console.log({...doc.data(),id:doc.id});\r\n                });\r\n                //console.log(documents)\r\n                setDocs(documents);\r\n        });\r\n        return () => {\r\n            //cleanup when no longer in use / this is a cleanup function that react will run when\r\n            // a component using the hook unmounts\r\n            unsub();\r\n        }\r\n    }, [collection])\r\n    return { docs };\r\n}\r\n \r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs } = useFirestore('images');\r\n    //console.log(docs);\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id}\r\n                    layout\r\n                    whileHover={{ opacity: 1 }} s\r\n                    onClick={() => setSelectedImg(doc.url)}\r\n                >\r\n                    <motion.img src={doc.url} alt=\"uploaded pic\"\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        transition={{ delay: 0.5 }}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageGrid;","/* \r\n    This is a modal View componenet.\r\n    that will view image in a full screen mode.\r\n*/\r\n\r\n\r\nimport React from \"react\";\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n        >\r\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\r\n                initial={{ y: \"-100vh\" }}\r\n                animate={{ y: 0 }}\r\n            />\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h2>My Pictures</h2>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from \"react\";\r\nimport { projectStorage,projectFirestore, timeStamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) =>{\r\n    const [progress,setProgress] =useState(0);//File upload progress\r\n    const [error,setError] =useState(null);//Errors list\r\n    const [url,setUrl] =useState(null);//Url setter\r\n\r\n    useEffect(()=>{\r\n        //reference\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed',(snap)=>{ //snap = snaphot object of file being uploaded realtime i.e it happens multiple times during upload\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes)*100;\r\n            setProgress(percentage);\r\n        },(err)=>{\r\n            setError(err);\r\n        },async()=>{\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timeStamp();\r\n            collectionRef.add({/* url:url */url,createdAt});\r\n            setUrl(url);\r\n             \r\n        })\r\n    },[file]);\r\n    return { progress, url, error};\r\n}\r\n\r\nexport default useStorage;","import React, {useEffect}from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url,progress} = useStorage(file);\r\n    console.log(progress, url);\r\n    useEffect(() => {\r\n        if(url){setFile(null)}\r\n        /* return () => {\r\n            cleanup\r\n        }; */\r\n    }, [url,setFile]);\r\n    return ( \r\n        <motion.div \r\n            className=\"progress-bar\" \r\n            initial = {{width:0}}\r\n            animate = {{width:progress+'%'}}\r\n        /> \r\n     );\r\n}\r\n \r\nexport default ProgressBar;","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n    //state hooks for file\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    //File Types\r\n    const types = ['image/png','image/jpeg']\r\n    //event handler\r\n    const uploadHandler = (event)=>{\r\n        //console.log('A file is chosen!');\r\n        let selected = event.target.files[0];\r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        }else{\r\n            setFile(null);\r\n            setError('Please select a valid Image file only. [png,jpeg]');\r\n        };\r\n    }\r\n    //DOM Output\r\n    return ( \r\n        <React.Fragment>\r\n            <form>\r\n                <label>\r\n                    <input type=\"file\" onChange = {uploadHandler}/>\r\n                    <span>+</span>\r\n                </label>\r\n                <div className=\"output\">\r\n                    {error && <div className= \"error\" >{error} </div>}\r\n                    {file && <div>{file.name} </div>}\r\n                    {file && <ProgressBar file = {file} setFile = {setFile}/>}\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default UploadForm;","import React, { useState, useEffect } from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport './themes/switcher.scss';\n\nfunction App() {\n  //selected Image state\n  const [selectedImg, setSelectedImg] = useState(null);\n  //theme state hook\n  const[colorTheme, setColorTheme] = useState('theme-white');\n  //Theme selection effect\n  useEffect(() => {\n    //effect\n    //check for selected theme //local storage value\n    const currentThemeColor = localStorage.getItem('theme-color');\n    //found selected color value in state\n    if(currentThemeColor){\n      setColorTheme(currentThemeColor);\n    }\n/* \n    return () => {\n      \n    } */\n  }, [])\n  //theme change event sets theme\n  const handleClick= (theme)=>{\n    setColorTheme(theme);\n    localStorage.setItem('theme-color',theme);\n  };\n\n  return (\n    <div className={`App ${colorTheme}`}>\n      <div className=\"head\">\n      <div className=\"head-title\"><h2>fotofire</h2></div>\n      <div className=\"theme-option\">\n        <div id=\"theme-white\" \n          onClick={()=>{handleClick('theme-white')}}\n          className={`${colorTheme ==='theme-white'?'active':''}`}\n        />\n        <div id=\"theme-blue\" \n          onClick={()=>{handleClick('theme-blue')}}\n          className={`${colorTheme ==='theme-blue'?'active':''}`}\n        />\n        <div id=\"theme-orange\" \n          onClick={()=>{handleClick('theme-orange')}}\n          className={`${colorTheme ==='theme-orange'?'active':''}`}\n        />\n        <div id=\"theme-purple\" \n          onClick={()=>{handleClick('theme-purple')}}\n          className={`${colorTheme ==='theme-purple'?'active':''}`}\n        />\n        <div id=\"theme-green\" \n          onClick={()=>{handleClick('theme-green')}}\n          className={`${colorTheme ==='theme-green'?'active':''}`}\n        />\n        <div id=\"theme-black\" \n          onClick={()=>{handleClick('theme-black')}}\n          className={`${colorTheme ==='theme-black'?'active':''}`}\n        />\n      </div>\n      </div>\n      <div className=\"content-box\">\n        <Title />\n        <UploadForm />\n        <ImageGrid setSelectedImg={setSelectedImg} />\n        {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}